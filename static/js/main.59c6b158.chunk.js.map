{"version":3,"sources":["Square.js","Board.js","Game.js","index.js"],"names":["Square","props","className","onClick","whenclickonbox","value","Board","rest","setState","squares","Array","fill","state","xIsNext","i","this","calculateWinner","handleClick","status","winner","renderSquare","Component","lines","length","a","b","c","Game","ReactDOM","render","document","getElementById"],"mappings":"wMAgBeA,EAbF,SAACC,GAEP,OACC,mCAEI,wBAAQC,UAAU,SAASC,QAAS,kBAAIF,EAAMG,kBAA9C,SACIH,EAAMI,WCmFPC,E,kDArFX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IA4BTM,KAAK,WACN,EAAKC,SAAS,CACVC,QAAQC,MAAM,GAAGC,KAAK,SA5BtB,EAAKC,MAAQ,CACRH,QAAUC,MAAM,GAAGC,KAAK,MACxBE,SAAS,GALC,E,wDAYPC,GACR,IAAML,EAAUM,KAAKH,MAAMH,QAExBO,EAAgBP,IAAYA,EAAQK,KAIvCL,EAAQK,GAAKC,KAAKH,MAAMC,QAAU,IAAK,IAGvCE,KAAKP,SAAS,CAEVK,SAAUE,KAAKH,MAAMC,a,mCAefC,GAAI,IAAD,OACd,OAAQ,cAAC,EAAD,CAAQT,MAAOU,KAAKH,MAAMH,QAAQK,GAAIV,eAAiB,kBAAM,EAAKa,YAAYH,Q,+BAOrF,IACII,EADEC,EAASH,EAAgBD,KAAKH,MAAMH,SAW1C,OARIS,EADDC,EACU,YAAcA,EAKd,sBAAwBJ,KAAKH,MAAMC,QAAU,IAAK,KAI3D,gCACA,qBAAKX,UAAU,OAAf,SAAsB,oDACtB,qBAAKA,UAAU,SAAf,SAAyBgB,IACzB,sBAAKhB,UAAU,QAAf,UACA,sBAAKA,UAAU,YAAf,UACKa,KAAKK,aAAa,GAClBL,KAAKK,aAAa,GAClBL,KAAKK,aAAa,MAEvB,sBAAKlB,UAAU,YAAf,UACKa,KAAKK,aAAa,GAClBL,KAAKK,aAAa,GAClBL,KAAKK,aAAa,MAEvB,sBAAKlB,UAAU,YAAf,UACKa,KAAKK,aAAa,GAClBL,KAAKK,aAAa,GAClBL,KAAKK,aAAa,SAGpB,wBAAQlB,UAAU,QAAQC,QAASY,KAAKR,KAAxC,4B,GAlFMc,aA2FrB,SAASL,EAAgBP,GAYrB,IAXA,IAAMa,EAAQ,CACV,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAGAR,EAAE,EAAGA,EAAIQ,EAAMC,OAAQT,IAAK,CAAC,IAAD,cACjBQ,EAAMR,GADW,GAC1BU,EAD0B,KACxBC,EADwB,KACtBC,EADsB,KAEjC,GAAGjB,EAAQe,IAAMf,EAAQe,KAAOf,EAAQgB,IAAMhB,EAAQe,KAAOf,EAAQiB,GACjE,OAAOjB,EAAQe,GAGvB,OAAO,K,UC/FIG,E,uKAXP,OACA,qBAAKzB,UAAU,OAAf,SACI,qBAAKA,UAAU,aAAf,SACI,cAAC,EAAD,Y,GALImB,aCDpBO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.59c6b158.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Square=(props )=>{\r\n    \r\n       return(\r\n        <>\r\n    \r\n            <button className=\"square\" onClick={()=>props.whenclickonbox()} >\r\n               {props.value} \r\n            </button>\r\n         </>\r\n        )\r\n    }\r\n\r\n\r\nexport default Square;","import React, { Component } from 'react'\r\nimport Square from './Square';\r\n\r\n\r\n class Board extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             squares : Array(9).fill(null),//here we are declearing one empty array to store the values of X and O\r\n             xIsNext: true,//it is the variable which will change frequently as condtion will change on clicking the square button\r\n        }\r\n       // console.log(this.state.squares);\r\n    }\r\n\r\n\r\n\r\n    handleClick(i) {//it is the function which will run when square button will clicked by user\r\n        const squares = this.state.squares//here we are storing empty array in squares variable\r\n        //console.log(squares);\r\n        if(calculateWinner(squares) || squares[i]){\r\n            return ;\r\n        }\r\n        else{\r\n        squares[i] = this.state.xIsNext ? 'X' :'O';\r\n        }\r\n\r\n        this.setState({ \r\n            //squares: squares,\r\n            xIsNext: !this.state.xIsNext,//it is the alternate value of X and O if isnext is false then on nextchance it will get true\r\n        })\r\n\r\n    }\r\n\r\n     rest=()=>{\r\n    this.setState({\r\n        squares:Array(9).fill(null),//it is the restart functionality when we'll click on restart then all the arrays index or all boxes will get empty\r\n    })\r\n   }\r\n    \r\n    \r\n   \r\n    \r\n\r\n    renderSquare (i) {\r\n       return  <Square value={this.state.squares[i]} whenclickonbox={ () => this.handleClick(i)}/>\r\n    }//it is the component rendering we are  using square component here inside the rendersquare method with one parameter 'i' i.e index\r\n     //and also we are passing one  method \r\n\r\n  \r\n\r\n    render() {\r\n        const winner = calculateWinner(this.state.squares);\r\n        let status;\r\n        if(winner) {\r\n            status = 'Winner:  ' + winner;\r\n        }\r\n\r\n       \r\n        else  {\r\n            status = 'Next Player is :  ' + (this.state.xIsNext ? 'X' :'O');\r\n        }\r\n\r\n        return (\r\n            <div>\r\n            <div className=\"head\"><h1>Tic Tae Toe 2021</h1></div>\r\n            <div className=\"status\">{status}</div>\r\n            <div className=\"board\">\r\n            <div className=\"board-row\">\r\n                {this.renderSquare(0)}     \r\n                {this.renderSquare(1)}\r\n                {this.renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {this.renderSquare(3)}\r\n                {this.renderSquare(4)}\r\n                {this.renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {this.renderSquare(6)}\r\n                {this.renderSquare(7)}\r\n                {this.renderSquare(8)}\r\n            </div>\r\n            </div>\r\n               <button className=\"restr\" onClick={this.rest}>Restart</button>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0,1,2],\r\n        [3,4,5],\r\n        [6,7,8],\r\n        [0,3,6],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [0,4,8],\r\n        [2,4,6],\r\n    ];\r\n\r\n    for (let i=0; i < lines.length; i++) {\r\n        const [a,b,c] = lines[i];\r\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}","import React, { Component } from 'react'\r\nimport Board from './Board';\r\nimport './App.css';\r\n\r\n\r\n class Game extends Component {\r\n    render() {\r\n        return (\r\n        <div className=\"game\">\r\n            <div className=\"game-board\">\r\n                <Board />\r\n            </div>\r\n               \r\n         </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game","import React from 'react';\r\nimport ReactDOM  from 'react-dom';\r\nimport Game from './Game';\r\n\r\nReactDOM.render(<Game/>,document.getElementById('root'));"],"sourceRoot":""}